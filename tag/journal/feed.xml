<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="/tag/journal/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2022-04-06T22:16:02+00:00</updated>
  <id>/tag/journal/feed.xml</id>

  
  
  

  
    <title type="html">Fast Dowon API | </title>
  

  
    <subtitle>Backend Developer</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">내 Github 이름이 Djangowon인 이유</title>
      <link href="/the_reason_why_my_github_is_djangowon" rel="alternate" type="text/html" title="내 Github 이름이 Djangowon인 이유" />
      <published>2022-04-07T00:00:00+00:00</published>
      <updated>2022-04-07T00:00:00+00:00</updated>
      <id>/the_reason_why_my_github_is_djangowon</id>
      <content type="html" xml:base="/the_reason_why_my_github_is_djangowon">&lt;h1 id=&quot;djangowon&quot;&gt;Djangowon?&lt;/h1&gt;
&lt;p&gt;한창 부트캠프에서 장고를 배우게 되었을 무렵, 이 당시만 해도 깃헙을 잘 다루지 못했다. 
게임을 좋아해서 그런지 네이밍에 항상 진심이었던 나는 깃헙 이름도 동료들이 들었을 때 재미있고 기억에 각인될 이름을 가지고 싶었던 것 같다.
내 첫 프레임워크가 장고인 만큼 이때는 장고를 잘 다루고 싶은 마음이 정말 컸기 때문에(물론, 지금도 여전히 장고 잘 쓰고 싶음)   나중에도 항상 깃헙을 보며 처음 개발 공부를 하던 것처럼 초심을 찾자는 의미를 담았다.
사실 내 이름에서 D만 가장 앞으로 가져오면 Djangowon이라 이거다 싶었다.&lt;/p&gt;

&lt;p&gt;처음 만나는 면접 자리에서 종종 깃헙 이름이 거론되곤 했는데, “깃헙 아이디가 장고원이네요?”라고 알아봐 주시는 분들이 계셔서 이 주제로 웃으면서 스몰토크를 나눌 때마다 그 뭔지 모를 이상한 뿌듯한 마음이 생겨서 재밌었다.&lt;/p&gt;

&lt;p&gt;인턴 생활이 끝난 이후 현재까지는 FastAPI가 정말 직관적이고 깊게 파 보고 싶어서 Udemy강의를 들으며 메인 프레임워크로 꾸준히 학습 중이다.
최근에 &lt;a href=&quot;https://github.com/Djangowon/TIL/blob/main/FastAPI/%5BFastAPI%5D%20Use%20alembic%20with%20existing%20database.md/&quot;&gt;[alembic으로 DB 마이그레이션 하는 방법]&lt;/a&gt;을 알게 되어 TIL을 작성해두었는데, 장고처럼 간단한 명령어로 데이터베이스 버전 관리를 할 수 있어서 좋았다.&lt;br /&gt;
“나중에 장고 안 쓰면 어떡해요?”라고 들을 때마다 그럼 FastAPI 도원으로 바꾼다고 장난식으로 대답했었는데… 아무튼 이 글을 쓰면서, 지금 이 블로그 이름을 Fast Dowon API 로 수정했다.&lt;br /&gt;
빠른 도원 API…&lt;br /&gt;
Cool 하지 않나요?&lt;br /&gt;
(사실 전 마음에 듦. 빠르고 효율적인 API를 만들고 싶은 제 꿈을 담아보았읍니다.)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;3월에 있던 내 생일에 나의 동료 93불도저 님께서 준 생일선물.&lt;/center&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/umbrella.jpeg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;center&gt;(너무 * 100) 마음에 든다!&lt;/center&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/talk_with_bulldozer.jpeg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;center&gt;ㅋㅋㅋㅋㅋㅋㅋㅋ&lt;br /&gt;결론: 항상 Github를 보며 초심을 찾자!&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>mrdw</name>
        
        
      </author>

      

      
        <category term="Journal" />
      

      
        <summary type="html">Djangowon? 한창 부트캠프에서 장고를 배우게 되었을 무렵, 이 당시만 해도 깃헙을 잘 다루지 못했다. 게임을 좋아해서 그런지 네이밍에 항상 진심이었던 나는 깃헙 이름도 동료들이 들었을 때 재미있고 기억에 각인될 이름을 가지고 싶었던 것 같다. 내 첫 프레임워크가 장고인 만큼 이때는 장고를 잘 다루고 싶은 마음이 정말 컸기 때문에(물론, 지금도 여전히 장고 잘 쓰고 싶음) 나중에도 항상 깃헙을 보며 처음 개발 공부를 하던 것처럼 초심을 찾자는 의미를 담았다. 사실 내 이름에서 D만 가장 앞으로 가져오면 Djangowon이라 이거다 싶었다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">나의 개발이야기</title>
      <link href="/my_development_story" rel="alternate" type="text/html" title="나의 개발이야기" />
      <published>2022-01-28T00:00:00+00:00</published>
      <updated>2022-01-28T00:00:00+00:00</updated>
      <id>/my_development_story</id>
      <content type="html" xml:base="/my_development_story">&lt;h1 id=&quot;나의-개발이야기&quot;&gt;나의 개발이야기&lt;/h1&gt;
&lt;h3 id=&quot;q1-개발을-하기-전에-어떤-직무를-맡으셨나요&quot;&gt;Q1. 개발을 하기 전에 어떤 직무를 맡으셨나요?&lt;/h3&gt;
&lt;h3 id=&quot;a1&quot;&gt;A1.&lt;/h3&gt;
&lt;p&gt;패션디자인을 전공을 하고 의류 개발실에서 일을 하다가 백엔드 개발자로 커리어를 전환하게 된 이유를 적어보려고 합니다. 이전 직무 경험의 전반적인 워크 플로우는 디자이너가 도식화를 그려서 디자인을 한다면 그 도식화를 바탕으로 실제 옷이 만들어지는 도안, 패턴을 CAD로 만드는 일입니다. 말하자면 저는 옷의 설계도(평면 패턴)를 2D로 만드는 사람이었는데 CLO라는 3D 의상 시뮬레이션 소프트웨어를 접하게 되었고 이 시기에 빠르게 변화하는 IT기술 도입에 큰 관심이 생겼습니다.&lt;/p&gt;

&lt;h3 id=&quot;q2-그러면-패션-개발을-그만두고-웹개발에-뛰어든-계기는-무엇인가요&quot;&gt;Q2. 그러면 패션 개발을 그만두고 웹개발에 뛰어든 계기는 무엇인가요?&lt;/h3&gt;
&lt;h3 id=&quot;a2&quot;&gt;A2.&lt;/h3&gt;
&lt;p&gt;패션 개발자로 일하며 원래부터 무에서 유를 만들어내는 것에, ‘개발’이라는 말을 정말 매력적으로 느꼈는데 소프트웨어 개발은 어떻게 구현되는지 궁금해서 생활코딩 등의 기초 강의로 처음 개발을 접하게 되었고, 그 외에 컴퓨터 공학에 대한 기초 강의 영상을 보았는데 패션디자인을 할 땐 전혀 몰랐던 CS 지식이 저에게는 신선한 충격으로 다가와 몰두하게 되어 개발자로 커리어 전환을 마음먹게 되었습니다. 더불어 어려서부터 게임을 좋아했는데 그 영향으로 서버와 데이터에 관심이 생기고 결과적으로 백엔드 개발자의 길을 꿈꾸게 되었습니다.&lt;/p&gt;

&lt;h3 id=&quot;q3-어떤-방법으로-개발-커리어-준비를-하셨나요&quot;&gt;Q3. 어떤 방법으로 개발 커리어 준비를 하셨나요?&lt;/h3&gt;
&lt;h3 id=&quot;a3&quot;&gt;A3.&lt;/h3&gt;
&lt;p&gt;저는 하나에 꽂히면 몇시간동안 구글링하고 알아보는 것을 즐겨하는데 실행에 옮기기까지 꽤 오래 신중하게 고민했고 결국 제가 선택한 방법은 부트캠프에 가는 것이었습니다. 부트캠프에서 단기간 내에 개발 공부를 한다는 게 쉽지만은 않았지만 주니어 백엔드 개발자의 발판을 다질 수 있었고 개발자 마인드셋을 장착하는 데에 큰 긍정적인 영향을 받아서 부트캠프를 수료한 지금은 저한테 딱 맞았던 선택이었다고 생각합니다.&lt;/p&gt;

&lt;h3 id=&quot;q4-개발하면서-좋은-점은-무엇인가요&quot;&gt;Q4. 개발하면서 좋은 점은 무엇인가요?&lt;/h3&gt;
&lt;h3 id=&quot;a4&quot;&gt;A4.&lt;/h3&gt;
&lt;p&gt;개발하면서 재밌다고 느끼는 포인트가 대표적으로 두가지 있는데, 공유하는 개발 문화와 코드리뷰 문화입니다.&lt;/p&gt;

&lt;p&gt;개인적으로 저는 특히 개발자 직군이 공유하는 것도 많고 모르는 것에 대해 알려주는 것을 좋아한다는 느낌을 받았습니다. 에러때문에 막혀있을 때 주변에 동기들과 본인 코드가 아니어도 시간 할애하면서 같이 고치려고 머리 맞대서 고민하며 즐거워하는 모습을 많이 보았고 저도 다른 동기의 에러를 함께 고쳤을 때 그 쾌감이 정말 좋아서 공유하는 개발 문화에 반한 것 같습니다.&lt;/p&gt;

&lt;p&gt;코드리뷰 문화는 부트캠프에 있을 때부터 그랬는데, PR을 올리고 리뷰가 많이 달리면 신나는 경향이 있습니다. 내가 작업한 내용을 봐주고 거기에 대해서 리뷰를 달아주니까 기분이 너무 좋고, 놓치고 있는 혹은 모르는 포인트를 새롭게 알게 되거나 배우는 것이 많아서 좋아합니다. 프로젝트 기간 때 라이브 코드리뷰를 받을 때도 아하! 하는 순간도 많았고, 페이히어에서 인턴생활을 할 때에도 특히 코드리뷰 문화가 잘 잡혀있어서 좋은 영향을 많이 받았습니다.&lt;/p&gt;

&lt;h3 id=&quot;q5-개발하면서-어려웠던-점은-무엇인가요&quot;&gt;Q5. 개발하면서 어려웠던 점은 무엇인가요?&lt;/h3&gt;
&lt;h3 id=&quot;a5&quot;&gt;A5.&lt;/h3&gt;
&lt;p&gt;막히는 게 있을 때 공식문서를 보거나 구글링을 하는 경우, 해당 문서나 자료에서 또 다른 모르는 게 나오고 또 찾아보면 또 다른 모르는 게 나와서 기초 개발지식과 지식의 부족함을 체감할 수 있었습니다. 그럴 때면 너무 ​​답답한데 그런 상황이 이상하게 집중이 잘 되고 묘하게 재밌습니다. 끊임없이 학습하며 내 지식과 사고를 확장시키는 것이 굉장히 매력적이고 꾸준히 성장하는 개발자의 모습을 갖추고 싶습니다. 현재는 컴퓨터 공학에 대해 보다 더 깊이 공부하고 싶은 욕심이 있어 방송통신대학 컴퓨터 과학과로 편입하여 전공공부를 학습하게 되었습니다.&lt;/p&gt;

&lt;h3 id=&quot;q6-앞으로-어떤-개발자가-되고-싶나요&quot;&gt;Q6. 앞으로 어떤 개발자가 되고 싶나요?&lt;/h3&gt;
&lt;h3 id=&quot;a6&quot;&gt;A6.&lt;/h3&gt;
&lt;p&gt;꾸준히 성장하는 개발자, 소통하는 개발자, 장인 정신을 겸비한 개발자를 꿈꿉니다. 부트캠프와 현업에 계신 선배 개발자분들을 보며 관찰한 결과 자연스럽게 제가 되고싶은 모습을 그릴 수 있었는데, 무언가에 대해 설명을 할 때에 말의 높낮이가 크게 다르지 않고 나긋나긋한 말투로 이론과 설명 등을 상대방이 이해하기 쉽게 전달하는 모습을 보고 제가 닮고 싶은 개발자의 상이라 정립하였습니다. 앞서 나열한 디테일을 갖추어서 최종적으로는 ‘함께 일하고 싶은 개발자’가 되고 싶습니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>mrdw</name>
        
        
      </author>

      

      
        <category term="Journal" />
      

      
        <summary type="html">나의 개발이야기 Q1. 개발을 하기 전에 어떤 직무를 맡으셨나요? A1. 패션디자인을 전공을 하고 의류 개발실에서 일을 하다가 백엔드 개발자로 커리어를 전환하게 된 이유를 적어보려고 합니다. 이전 직무 경험의 전반적인 워크 플로우는 디자이너가 도식화를 그려서 디자인을 한다면 그 도식화를 바탕으로 실제 옷이 만들어지는 도안, 패턴을 CAD로 만드는 일입니다. 말하자면 저는 옷의 설계도(평면 패턴)를 2D로 만드는 사람이었는데 CLO라는 3D 의상 시뮬레이션 소프트웨어를 접하게 되었고 이 시기에 빠르게 변화하는 IT기술 도입에 큰 관심이 생겼습니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">페이히어 인턴 기록.</title>
      <link href="/payhere_internship" rel="alternate" type="text/html" title="페이히어 인턴 기록." />
      <published>2022-01-27T00:00:00+00:00</published>
      <updated>2022-01-27T00:00:00+00:00</updated>
      <id>/payhere_internship</id>
      <content type="html" xml:base="/payhere_internship">&lt;h1 id=&quot;payhere&quot;&gt;Payhere&lt;/h1&gt;
&lt;p&gt;페이히어에서 4주 간의 인턴생활을 마무리했고 그 후기를 적어보려고 합니다. 제 개인적으로 페이히어에서 인턴쉽을 진행할 수 있게 되어서 운도 정말 좋았다고 생각하고, 페이히어에서 만난 현업에 있는 선배 개발자 분들께서 많은 걸 얻어갔으면 좋겠다고 알려주신 것과 해주신 조언들이 앞으로 주니어 개발자로 성장하는 데 큰 힘이 될 것 같습니다!&lt;/p&gt;

&lt;p&gt;한달동안 생활은 요약하면 공식문서를 참고하면서 개별학습을 진행했고, 매주 월요일 백엔드 회의, 협업 중반부터는 데일리 미팅, 그리고 프로젝트 킥오프에 참여했었습니다. 데일리 미팅에서 jira 이용해서 매일 어떤 걸 하고 있고, 뭐뭐 할 예정이다 브리핑을 들었고, figma로 정리된 스토리나 로드맵 등 보면서 개발팀 외에도 운영팀이나 디자인팀과 소통하는 모습 함께 참여하면서 스프린트 간접 체험을 할 수 있었습니다.&lt;/p&gt;

&lt;p&gt;처음에는 FastAPI 공식문서를 보며 튜토리얼도 따라해보고, 사전 과제로 가계부 과제를 받았는데 각자 레포에서 개발하고 코드리뷰 받는 방식으로 진행했습니다. 과제 다음으로는 사내 개발 프로젝트에서 간단한 기능을 할당받았습니다.&lt;/p&gt;

&lt;h2 id=&quot;구현-기능&quot;&gt;구현 기능&lt;/h2&gt;
&lt;h3 id=&quot;같은-과제-다른-코드ㅎㅎ&quot;&gt;같은 과제, 다른 코드(ㅎㅎ)&lt;/h3&gt;
&lt;p&gt;처음 진행한 가계부 과제에서 장고만 쓰다가 처음으로 다른 프레임워크를 쓰게 되어서 DB를 연동하는 것 부터가 난제였습니다. 그래서 일단 찾아서 연동되는 거를 쓰다보니까 같은 과제인데도 같이 간 팀원(저 포함 3명)이 모두 다 다른 걸 쓰게 됐더라구요. 회원가입, 로그인에 user CRUD와 소비내역 기록/관리에 account CRUD를 구현했습니다.&lt;/p&gt;

&lt;h2 id=&quot;새롭게-배운-것&quot;&gt;새롭게 배운 것&lt;/h2&gt;
&lt;h3 id=&quot;fastapi&quot;&gt;FastAPI&lt;/h3&gt;
&lt;p&gt;협업기간동안 새롭게 배운 것은 우선 FastAPI 입니다. FastAPI는 현대적이고, 빠르며(고성능), 파이썬 표준 타입 힌트에 기초한 Python3.6+의 API를 빌드하기 위한 웹 프레임워크입니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;NodeJS 및 Go와 비슷한 성능, 현존하는 파이썬 웹 프레임워크 중 가장 빠르다.&lt;/li&gt;
      &lt;li&gt;개발 속도가 빠르다.&lt;/li&gt;
      &lt;li&gt;버그가 적다.&lt;/li&gt;
      &lt;li&gt;직관적이다.&lt;/li&gt;
      &lt;li&gt;간편하다.&lt;/li&gt;
      &lt;li&gt;코드 중복을 최소화한다.&lt;/li&gt;
      &lt;li&gt;견고하다, 대화형 자동 설명서를 사용해서 실행 가능한 코드를 구축할 수 있다.&lt;/li&gt;
      &lt;li&gt;개방형 API 표준(OpenAPI&amp;amp;JSON)을 기반으로 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;대략 이런 특징들이 있다고 하는데 정말 직관적인 편이고 지금은 저도 잘 못 다루지만 나중에 흐름을 알고 잘 다룰 수 있게 된다면 확실히 추후에 메리트가 있을 것 같아요.&lt;/p&gt;

&lt;h3 id=&quot;관심사의-분리-의존성-규칙&quot;&gt;관심사의 분리, 의존성 규칙&lt;/h3&gt;
&lt;p&gt;다음으로 관심사의 분리, 의존성 규칙입니다. 기능 면에서 가능한 중복이 아닌 여러 모듈로 명확히 나누는 것이라고 합니다. 그래서 과제를 할 때 api, model, service 단으로 나누어서 api단에서 라우터로 연결을 하고 클라이언트에서 파라미터를 전달받는 역할만 하고, 서비스단에서는 api단에서 파라미터 값을 전달받아서 직접적으로 db에 찍어서 생성,수정,삭제 등을 하는 역할을 하게끔 관심도 분리를 시켜주었어요. 이렇게 작게 쪼개서 모듈화로 독립성을 주는 게 나중에 유지보수할 때도 좋고, 클린코드, 깨끗한 코드를 작성하는 방법이고 지향점이라고 새롭게 배우게 되었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(소프트웨어 공학) 프로그램을 기능 면에서 가능한 중복이 아닌 여러 모듈로 명확히 나누는 것
    &lt;ul&gt;
      &lt;li&gt;여기서, 관심 = 프로그램의 기능, 행동, 목적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;큰 문제를 작은 부분들의 문제로 분할하면 해결이 용이함&lt;/li&gt;
  &lt;li&gt;모든 프로그래밍 패러다임의 지향점&lt;/li&gt;
  &lt;li&gt;모듈성과 캡슐화가 중요함
&lt;img src=&quot;assets/images/clean_architecture.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테크스펙-작성하기&quot;&gt;테크스펙 작성하기&lt;/h3&gt;
&lt;p&gt;기능구현을 하기 전에 테크스펙을 작성해서 문서화하는 작업을 했었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기능을 구현하기 전에 이 기능을 어떻게 구현할 것인지 기술적으로 풀어 설명하고, 제안하는 글&lt;/li&gt;
  &lt;li&gt;커뮤니케이션 비용 절감의 도구&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그-외&quot;&gt;그 외&lt;/h3&gt;
&lt;p&gt;선배 개발자분들이 해주신 조언으로는 본인이 만약 인턴으로 다시 돌아간다면 클린코드랑 클린아키텍처를 많이 읽을 거라고 추천을 해주셨습니다. 여러 기술을 잘 다루기 위해 광범위하게 학습하는 것 보다 한 가지 기술을 깊게 공부할 것, 전공자들이 알고 있는 CS지식 꾸준히 공부할 것, 요구사항을 던져줬을 때부터 적극적으로 질문하면서 proactive한 모습을 보여줄 것, 그리고 키워드 어썸은 어떤 기술이나 프레임워크를 사용할 때 fastapi awesome, django awesome 이런 식으로 구글링하면 해당 기술 사용한 예시코드로 작성된 레포가 나오는데 이런 것들 참고해서 처음 쓰는 기술이나 레퍼런스가 많이 없을 때 개발에 활용하면 좋을 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인턴일 때 많이 읽어볼 것 → &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;클린코드&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;클린 아키텍처&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;한 가지 기술을 깊게 공부할 것&lt;/li&gt;
  &lt;li&gt;전공자들 못지 않게 컴퓨터 공학 CS 지식도 꾸준히 공부할 것 → 최소 6개월~1년동안 빡세게&lt;/li&gt;
  &lt;li&gt;백지 상태부터 질문할 것 → 리액션이 좋은 게 아닌 먼저 행동해서 보여주자&lt;/li&gt;
  &lt;li&gt;키워드 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awesome&lt;/code&gt; → ex. fastapi awesome, django awesome&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;p&gt;마지막으로 느낀점과 다짐은 현업에 있는 선배 개발자분들과 새롭게 알게 되어서 너무 좋았고, 한달동안 얻어가는 게 많았으면 좋겠다고 시간내서 알려주시고 여러 조언들을 해주셔서 되게 감사했어요. 꼭 성장하는 모습을 보여드리고 싶다고 생각했습니다. 이런 네트워크를 얻게 되어서 기쁩니다!&lt;br /&gt;
기술적으로는 fastapi가 새로운 스택에다 아직 1.0버전이 나오지 않은 초기 버전이라 자료가 너무 부족해서 공부하기 힘든 점이 있었지만 찾아서 공부하는 재미가 있었고, 틈틈이 cs공부와 개발을 병행해야겠습니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>mrdw</name>
        
        
      </author>

      

      
        <category term="Journal" />
      

      
        <summary type="html">Payhere 페이히어에서 4주 간의 인턴생활을 마무리했고 그 후기를 적어보려고 합니다. 제 개인적으로 페이히어에서 인턴쉽을 진행할 수 있게 되어서 운도 정말 좋았다고 생각하고, 페이히어에서 만난 현업에 있는 선배 개발자 분들께서 많은 걸 얻어갔으면 좋겠다고 알려주신 것과 해주신 조언들이 앞으로 주니어 개발자로 성장하는 데 큰 힘이 될 것 같습니다!</summary>
      

      
      
    </entry>
  
</feed>
